Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              tft-cpp/tft.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
                              tft-cpp/tft.o (__divmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                              rfm12.o (memcpy)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
                              tft-cpp/tft.o (fdevopen)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
                              main.o (fputc)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
                              main.o (__iob)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(puts.o)
                              main.o (puts)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o) (calloc)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o) (malloc)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o) (memset)

Allocating common symbols
Common symbol       size              file

__brkval            0x2               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
__flp               0x2               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
__iob               0x6               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
LOAD main.o
LOAD rfm12.o
LOAD tft-cpp/ascii.o
LOAD tft-cpp/tft.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libm.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1892
 *(.vectors)
 .vectors       0x00000000       0x7c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000007c       0x18 rfm12.o
 .progmem.data  0x00000094      0x318 tft-cpp/ascii.o
                0x00000094                ascii_6x8
                0x000003ac                . = ALIGN (0x2)
                0x000003ac                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000003ac        0x0 linker stubs
 *(.trampolines*)
                0x000003ac                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000003ac                __ctors_start = .
 *(.ctors)
                0x000003ac                __ctors_end = .
                0x000003ac                __dtors_start = .
 *(.dtors)
                0x000003ac                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000003ac        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
                0x000003ac                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000003ac        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000003b8       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x000003b8                __do_copy_data
 .init4         0x000003ce       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000003ce                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000003de        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
 *(.init9)
 *(.text)
 .text          0x000003e6        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
                0x000003e6                __vector_22
                0x000003e6                __vector_28
                0x000003e6                __vector_1
                0x000003e6                __vector_24
                0x000003e6                __vector_12
                0x000003e6                __bad_interrupt
                0x000003e6                __vector_6
                0x000003e6                __vector_23
                0x000003e6                __vector_30
                0x000003e6                __vector_25
                0x000003e6                __vector_11
                0x000003e6                __vector_13
                0x000003e6                __vector_17
                0x000003e6                __vector_19
                0x000003e6                __vector_7
                0x000003e6                __vector_27
                0x000003e6                __vector_5
                0x000003e6                __vector_4
                0x000003e6                __vector_9
                0x000003e6                __vector_2
                0x000003e6                __vector_21
                0x000003e6                __vector_15
                0x000003e6                __vector_29
                0x000003e6                __vector_8
                0x000003e6                __vector_26
                0x000003e6                __vector_14
                0x000003e6                __vector_10
                0x000003e6                __vector_16
                0x000003e6                __vector_18
                0x000003e6                __vector_20
 .text          0x000003ea      0x20e main.o
                0x0000043a                init_sys()
                0x00000466                main
                0x00000408                init()
 .text          0x000005f8      0x438 rfm12.o
                0x0000063e                rfm12_livectrl
                0x0000088e                rfm12_tick
                0x000006ce                __vector_3
                0x000009f6                rfm12_tx
                0x00000924                rfm12_rx_clear
                0x000008fc                rfm12_start_tx
                0x00000950                rfm12_init
                0x00000634                rfm12_data_safe(unsigned int)
 .text          0x00000a30        0x0 tft-cpp/ascii.o
 .text          0x00000a30      0xa54 tft-cpp/tft.o
                0x00000b3c                tft::setFont(unsigned char, unsigned char)
                0x00000cf2                tft::line(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
                0x00001138                tft::drawImage2(unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int, bool)
                0x000011e6                tft::drawImage2Aligned(unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int, bool)
                0x00000c4a                tft::frame(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned int)
                0x000012fa                tft::newline()
                0x00000eb6                tft::setOrient(unsigned char)
                0x00001294                tft::fill(unsigned int)
                0x00001034                tft::drawChar(char)
                0x00000b7c                tft::rectangle(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
                0x0000145a                tftout()
                0x00000efc                tft::init()
                0x00001430                tft::putString(char const*, bool)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(puts.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
 .text          0x00001484        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                0x00001484                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001484       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00001484                __udivmodhi4
 .text.libgcc   0x000014ac       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
                0x000014ac                __divmodhi4
                0x000014ac                _div
 .text.libgcc   0x000014d2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000014d2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000014d2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000014d2       0x12 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                0x000014d2                memcpy
 .text.avr-libc
                0x000014e4       0x98 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
                0x000014e4                fdevopen
 .text.avr-libc
                0x0000157c       0x58 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
                0x0000157c                fputc
 .text.avr-libc
                0x000015d4       0x6a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(puts.o)
                0x000015d4                puts
 .text.avr-libc
                0x0000163e       0x38 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
                0x0000163e                calloc
 .text.avr-libc
                0x00001676      0x20a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x00001676                malloc
                0x000017d0                free
 .text.avr-libc
                0x00001880        0xe c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                0x00001880                memset
                0x0000188e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000188e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000188e                exit
                0x0000188e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000188e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00001892                _etext = .

.data           0x00800100       0x6a load address 0x00001892
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
 .data          0x00800100       0x10 main.o
 .data          0x00800110       0x49 rfm12.o
                0x00800110                livectrl_cmds
 .data          0x00800159        0x8 tft-cpp/ascii.o
                0x00800159                fonts
 .data          0x00800161        0x2 tft-cpp/tft.o
                0x00800161                tft::font
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(puts.o)
 .data          0x00800163        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
 .data          0x00800163        0x6 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x00800165                __malloc_heap_start
                0x00800167                __malloc_heap_end
                0x00800163                __malloc_margin
 .data          0x00800169        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080016a                . = ALIGN (0x2)
 *fill*         0x00800169        0x1 00
                0x0080016a                _edata = .
                0x0080016a                PROVIDE (__data_end, .)

.bss            0x0080016a       0xfa
                0x0080016a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080016a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644p.o
 .bss           0x0080016a       0x68 main.o
                0x0080016a                bufptr
                0x008001d0                p
                0x0080016c                str
 .bss           0x008001d2       0x76 rfm12.o
                0x00800239                ctrl
                0x008001f5                rf_rx_buffers
                0x008001d2                rf_tx_buffer
 .bss           0x00800248        0x0 tft-cpp/ascii.o
 .bss           0x00800248       0x12 tft-cpp/tft.o
                0x0080024b                tft::x
                0x00800255                tft::background
                0x0080024d                tft::y
                0x00800249                tft::orient
                0x0080024a                tft::tabSize
                0x00800248                tft::zoom
                0x0080024f                tft::width
                0x00800253                tft::foreground
                0x00800251                tft::height
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(puts.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
 .bss           0x0080025a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080025a        0x6 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
                0x0080025a                __iob
 COMMON         0x00800260        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x00800260                __brkval
                0x00800262                __flp
                0x00800264                PROVIDE (__bss_end, .)
                0x00001892                __data_load_start = LOADADDR (.data)
                0x000018fc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800264        0x0
                0x00800264                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800264                PROVIDE (__noinit_end, .)
                0x00800264                _end = .
                0x00800264                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 rfm12.o
 .debug_aranges
                0x00000040       0x20 tft-cpp/tft.o

.debug_pubnames
                0x00000000      0x269
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x4a main.o
 .debug_pubnames
                0x0000004a       0xd7 rfm12.o
 .debug_pubnames
                0x00000121       0x2a tft-cpp/ascii.o
 .debug_pubnames
                0x0000014b      0x11e tft-cpp/tft.o

.debug_info     0x00000000     0x225a
 *(.debug_info)
 .debug_info    0x00000000      0x861 main.o
 .debug_info    0x00000861      0x578 rfm12.o
 .debug_info    0x00000dd9      0x121 tft-cpp/ascii.o
 .debug_info    0x00000efa     0x1360 tft-cpp/tft.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x9c5
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x2f0 main.o
 .debug_abbrev  0x000002f0      0x24b rfm12.o
 .debug_abbrev  0x0000053b       0x9c tft-cpp/ascii.o
 .debug_abbrev  0x000005d7      0x3ee tft-cpp/tft.o

.debug_line     0x00000000     0x12ef
 *(.debug_line)
 .debug_line    0x00000000      0x33e main.o
 .debug_line    0x0000033e      0x530 rfm12.o
 .debug_line    0x0000086e       0x5c tft-cpp/ascii.o
 .debug_line    0x000008ca      0xa25 tft-cpp/tft.o

.debug_frame    0x00000000      0x260
 *(.debug_frame)
 .debug_frame   0x00000000       0x50 main.o
 .debug_frame   0x00000050       0xb0 rfm12.o
 .debug_frame   0x00000100      0x160 tft-cpp/tft.o

.debug_str      0x00000000      0x787
 *(.debug_str)
 .debug_str     0x00000000      0x38f main.o
                                0x3e6 (size before relaxing)
 .debug_str     0x0000038f      0x1d4 rfm12.o
                                0x323 (size before relaxing)
 .debug_str     0x00000563       0x2c tft-cpp/ascii.o
                                0x108 (size before relaxing)
 .debug_str     0x0000058f      0x1f8 tft-cpp/tft.o
                                0x4c1 (size before relaxing)

.debug_loc      0x00000000      0xf91
 *(.debug_loc)
 .debug_loc     0x00000000      0x10e main.o
 .debug_loc     0x0000010e      0x189 rfm12.o
 .debug_loc     0x00000297      0xcfa tft-cpp/tft.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(rfm12b.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0xf0
 .debug_ranges  0x00000000       0xa8 main.o
 .debug_ranges  0x000000a8       0x48 rfm12.o
